services:
  frontend:
    build: 
      context: .
      dockerfile: ./frontend/Dockerfile
      target: dev
    volumes:
      - ./frontend/src:/usr/src/src
    environment:
      - NODE_ENV=local
  api:
    build: 
      args:
        - user=butachi
        - uid=1000
      context: .
      dockerfile: ./api/Dockerfile
      target: api
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && ./wait-for-it.sh redis:6379 &&  php-fpm"
    restart: unless-stopped
    volumes:
      - ./api/public:/usr/src/public
      - ./api/app:/usr/src/app
      - ./api/config:/usr/src/config
      - ./api/database:/usr/src/database
      - ./api/routes:/usr/src/routes
      - ./api/storage:/usr/src/storage
      - ./api/bootstrap:/usr/src/bootstrap
      - ./api/tests:/usr/src/tests
      - ./api/composer.json:/usr/src/composer.json
      - ./api/composer.lock:/usr/src/composer.lock
      - ./api/.env:/usr/src/.env
      - ./deployment/config/php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/php.ini
    depends_on:
      - migrate
      - mysql
      - redis
  redis:
    image: redis:7.4.2-alpine
    restart: unless-stopped
    volumes:
      - ./redisdata:/data
    ports:
      - "63790:6379"
  mysql:
    build: 
      args:
        - password=${DB_PASSWORD}
      context: .
      dockerfile: ./Dockerfile.mysql
    restart: unless-stopped
    volumes:
      - ./mysqldata:/var/lib/mysql
    ports:
      - "33060:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
  migrate:
    build: 
      args:
        - user=butachi
        - uid=1000
      context: .
      dockerfile: ./api/Dockerfile
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && php /usr/src/artisan migrate --force"
    restart: no
    depends_on:
      - mysql
  nginx:
    build:
      context: .
      dockerfile: ./Dockerfile.nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./api:/usr/src
      - ./deployment/config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
  proxy:
    build: 
      context: .
      dockerfile: ./Dockerfile.proxy
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./deployment/config/proxy.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - nginx
  scheduler:
    build: 
      args:
        - user=butachi
        - uid=1000
      context: .
      dockerfile: ./api/Dockerfile
      target: scheduler
    restart: unless-stopped
    volumes:
      - ./api/app:/usr/src/app
      - ./api/config:/usr/src/config
      - ./api/database:/usr/src/database
      - ./api/routes:/usr/src/routes
      - ./api/storage:/usr/src/storage
      - ./api/tests:/usr/src/tests
      - ./api/composer.json:/usr/src/composer.json
      - ./api/composer.lock:/usr/src/composer.lock
      - ./api/.env:/usr/src/.env
    depends_on:
      - migrate
      - mysql
      - redis
  worker:
    build: 
      args:
        - user=butachi
        - uid=1000
      context: .
      dockerfile: ./api/Dockerfile
      target: worker
    restart: unless-stopped
    volumes:
      - ./api/app:/usr/src/app
      - ./api/config:/usr/src/config
      - ./api/database:/usr/src/database
      - ./api/routes:/usr/src/routes
      - ./api/storage:/usr/src/storage
      - ./api/tests:/usr/src/tests
      - ./api/composer.json:/usr/src/composer.json
      - ./api/composer.lock:/usr/src/composer.lock
      - ./api/.env:/usr/src/.env
    depends_on:
      - migrate
      - mysql
      - redis
  update:
    build: 
      args:
        - user=butachi
        - uid=1000
      context: .
      dockerfile: ./api/Dockerfile
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && ./update.sh"
    restart: no
    volumes:
      - ./api/composer.json:/usr/src/composer.json
      - ./api/composer.lock:/usr/src/composer.lock
      - ./api/.env:/usr/src/.env
      - ./deployment/bin/update.sh:/usr/src/update.sh
    depends_on:
      - mysql